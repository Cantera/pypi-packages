name: "Download Cantera Test Files"
description: "Download and cache Cantera's Python test suite"
inputs:
  incoming-sha:
    description: The hash of the commit that should be downloaded
    required: true
outputs:
  test-root:
    description: The root folder where the tests are located
    value: ${{ steps.set-output.outputs.DESTINATION_PATH }}

runs:
  using: "composite"
  steps:
  - name: Sanitize the destination path
    run: |
      $DESTINATION_PATH = "${{ runner.temp }}" -replace "\\", "/"
      echo "DESTINATION_PATH=$DESTINATION_PATH" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
    if: runner.os == 'Windows'
    shell: pwsh
  - name: Sanitize the destination path
    run: echo "DESTINATION_PATH=${{ runner.temp }}" >> $GITHUB_ENV
    shell: bash
    if: runner.os != 'Windows'
  - name: Set the outputs
    id: set-output
    run: echo "DESTINATION_PATH=${{ env.DESTINATION_PATH }}" >> $GITHUB_OUTPUT
    shell: bash
  - name: Restore cached the test files
    uses: actions/cache/restore@v4
    id: restore-cache
    with:
      path: ${{ env.DESTINATION_PATH }}/test
      # Bump the integer to bust the cache
      key: ${{ inputs.incoming-sha }}-${{ runner.os }}-0
  - name: Download and unpack the tarball
    if: steps.restore-cache.outputs.cache-hit != 'true'
    run: |
      curl -fsSL "https://github.com/cantera/cantera/archive/${{ inputs.incoming-sha }}.tar.gz" -o ${{ env.DESTINATION_PATH }}/cantera.tar.gz
      tar -xzf ${{ env.DESTINATION_PATH }}/cantera.tar.gz --strip-components=1 -C ${{ env.DESTINATION_PATH }} "cantera-${{ inputs.incoming-sha }}/test"
      rm ${{ env.DESTINATION_PATH }}/cantera.tar.gz
    shell: bash
  - name: Save the test file cache
    uses: actions/cache/save@v4
    if: always() && steps.restore-cache.outputs.cache-hit != true
    id: save-cache
    with:
      path: ${{ env.DESTINATION_PATH }}/test
      key: ${{ steps.restore-cache.outputs.cache-primary-key }}
